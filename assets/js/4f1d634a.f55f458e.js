"use strict";(self.webpackChunkvex_docs=self.webpackChunkvex_docs||[]).push([[8578],{1896:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"exchange-design/backend-architecture/Introduction","title":"Introduction","description":"This document explains the core architecture of our provable crypto exchange.","source":"@site/docs/exchange-design/backend-architecture/01_Introduction.md","sourceDirName":"exchange-design/backend-architecture","slug":"/exchange-design/backend-architecture/Introduction","permalink":"/exchange-design/backend-architecture/Introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/trade-vex/vex-docs/edit/main/docs/exchange-design/backend-architecture/01_Introduction.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"Introduction","title":"Introduction","sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"Fees","permalink":"/Getting-started/Fees"},"next":{"title":"System Overview","permalink":"/exchange-design/backend-architecture/System_Overview"}}');var i=t(4848),c=t(8453);const o={id:"Introduction",title:"Introduction",sidebar_position:1},s="Introduction",a={},d=[];function l(e){const n={h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,i.jsx)(n.p,{children:"This document explains the core architecture of our provable crypto exchange."}),"\n",(0,i.jsx)(n.p,{children:"The system is designed for high performance, low-latency trading, and includes components like Client Gateways (CG), Order Management System (OMS), Matching Engines, and Market Data services."}),"\n",(0,i.jsx)(n.p,{children:"Key features:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Supports REST and FIX APIs"}),"\n",(0,i.jsx)(n.li,{children:"Handles spot trading across multiple pairs"}),"\n",(0,i.jsx)(n.li,{children:"Optimized for microsecond-level latency"}),"\n",(0,i.jsx)(n.li,{children:"Uses UDP and IPC for fast internal communication"}),"\n",(0,i.jsx)(n.li,{children:"Asynchronous balance updates and order archiving"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The following sections break down each part of the system and its role in processing user orders from entry to execution."})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var r=t(6540);const i={},c=r.createContext(i);function o(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);